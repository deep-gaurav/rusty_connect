type Clipboard {
  sendClipboard(deviceId: String, content: String!): String!
}

type ClipboardPayload {
  content: String!
}

type Connected {
  id: String!
}

type Device {
  id: String!
  identity: IdentityPayloadBody!
  paired: Boolean!
}

type DeviceWithState {
  device: Device!
  isConnected: Boolean!
}

type Disconnected {
  id: String!
}

type IdentityPayloadBody {
  deviceName: String!
  deviceId: String!
  deviceType: String!
  incomingCapabilities: [String!]!
  outgoingCapabilities: [String!]!
  protocolVersion: Int!
  tcpPort: Int
}

# A scalar that can represent any JSON value.
scalar JSON

type Mutation {
  plugins: PluginManager!
  broadcastIdentityUdp: IdentityPayloadBody!
  pair(id: String!, pair: Boolean!): DeviceWithState!
}

type PairPayloadBody {
  pair: Boolean!
}

type Payload {
  id: String!
  type: String!
  body: JSON!
}

type Ping {
  sendPing: String!
}

type PingPayload {
  pinged: Boolean!
}

type PluginManager {
  ping: Ping!
  clipboard: Clipboard!
}

type Query {
  howdy: String!
  devices: [DeviceWithState!]!
  device(id: String!): DeviceWithState!
}

type ReceivedMessage {
  deviceId: String
  payload: ReceivedPayload!
}

union ReceivedPayload =
    Connected
  | Disconnected
  | IdentityPayloadBody
  | PairPayloadBody
  | PingPayload
  | ClipboardPayload
  | Payload

type Subscription {
  payloads: ReceivedMessage!
}
